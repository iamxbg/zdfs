<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zdfs.dao.DiagnoseTMapper">
  <resultMap id="BaseResultMap" type="zdfs.model.DiagnoseT">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="p_id" jdbcType="VARCHAR" property="p_id" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="video" jdbcType="VARCHAR" property="video" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="delflag" jdbcType="BIT" property="delflag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    id, p_id, tel, info, state, video, create_time, delflag
  </sql>
  <select id="selectByExample" parameterType="zdfs.model.DiagnoseTExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from diagnose_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from diagnose_t
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    delete from diagnose_t
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="zdfs.model.DiagnoseTExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    delete from diagnose_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zdfs.model.DiagnoseT"  useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->

    insert into diagnose_t ( p_id, tel, 
      info, state, video, create_time, 
      delflag)
    values ( #{p_id,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{video,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{delflag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="zdfs.model.DiagnoseT">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into diagnose_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="p_id != null">
        p_id,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="video != null">
        video,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="delflag != null">
        delflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="p_id != null">
        #{p_id,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="video != null">
        #{video,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null">
        #{delflag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zdfs.model.DiagnoseTExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    select count(*) from diagnose_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    update diagnose_t
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.p_id != null">
        p_id = #{record.p_id,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.video != null">
        video = #{record.video,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delflag != null">
        delflag = #{record.delflag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    update diagnose_t
    set id = #{record.id,jdbcType=BIGINT},
      p_id = #{record.p_id,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIT},
      video = #{record.video,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      delflag = #{record.delflag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zdfs.model.DiagnoseT">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    update diagnose_t
    <set>
      <if test="p_id != null">
        p_id = #{p_id,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="video != null">
        video = #{video,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="delflag != null">
        delflag = #{delflag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="zdfs.model.DiagnoseT">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 17 20:14:02 CST 2017.
    -->
    update diagnose_t
    set p_id = #{p_id,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      video = #{video,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      delflag = #{delflag,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>