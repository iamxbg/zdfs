package zdfs.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RDoctorAnychatTExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public RDoctorAnychatTExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDoc_idIsNull() {
            addCriterion("doc_id is null");
            return (Criteria) this;
        }

        public Criteria andDoc_idIsNotNull() {
            addCriterion("doc_id is not null");
            return (Criteria) this;
        }

        public Criteria andDoc_idEqualTo(Integer value) {
            addCriterion("doc_id =", value, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idNotEqualTo(Integer value) {
            addCriterion("doc_id <>", value, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idGreaterThan(Integer value) {
            addCriterion("doc_id >", value, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("doc_id >=", value, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idLessThan(Integer value) {
            addCriterion("doc_id <", value, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idLessThanOrEqualTo(Integer value) {
            addCriterion("doc_id <=", value, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idIn(List<Integer> values) {
            addCriterion("doc_id in", values, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idNotIn(List<Integer> values) {
            addCriterion("doc_id not in", values, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idBetween(Integer value1, Integer value2) {
            addCriterion("doc_id between", value1, value2, "doc_id");
            return (Criteria) this;
        }

        public Criteria andDoc_idNotBetween(Integer value1, Integer value2) {
            addCriterion("doc_id not between", value1, value2, "doc_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idIsNull() {
            addCriterion("anychat_id is null");
            return (Criteria) this;
        }

        public Criteria andAnychat_idIsNotNull() {
            addCriterion("anychat_id is not null");
            return (Criteria) this;
        }

        public Criteria andAnychat_idEqualTo(Integer value) {
            addCriterion("anychat_id =", value, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idNotEqualTo(Integer value) {
            addCriterion("anychat_id <>", value, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idGreaterThan(Integer value) {
            addCriterion("anychat_id >", value, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("anychat_id >=", value, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idLessThan(Integer value) {
            addCriterion("anychat_id <", value, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idLessThanOrEqualTo(Integer value) {
            addCriterion("anychat_id <=", value, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idIn(List<Integer> values) {
            addCriterion("anychat_id in", values, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idNotIn(List<Integer> values) {
            addCriterion("anychat_id not in", values, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idBetween(Integer value1, Integer value2) {
            addCriterion("anychat_id between", value1, value2, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andAnychat_idNotBetween(Integer value1, Integer value2) {
            addCriterion("anychat_id not between", value1, value2, "anychat_id");
            return (Criteria) this;
        }

        public Criteria andCreate_timeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreate_timeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreate_timeEqualTo(Date value) {
            addCriterion("create_time =", value, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeGreaterThan(Date value) {
            addCriterion("create_time >", value, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeLessThan(Date value) {
            addCriterion("create_time <", value, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeIn(List<Date> values) {
            addCriterion("create_time in", values, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "create_time");
            return (Criteria) this;
        }

        public Criteria andCreate_timeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "create_time");
            return (Criteria) this;
        }

        public Criteria andDelflagIsNull() {
            addCriterion("delflag is null");
            return (Criteria) this;
        }

        public Criteria andDelflagIsNotNull() {
            addCriterion("delflag is not null");
            return (Criteria) this;
        }

        public Criteria andDelflagEqualTo(Boolean value) {
            addCriterion("delflag =", value, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagNotEqualTo(Boolean value) {
            addCriterion("delflag <>", value, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagGreaterThan(Boolean value) {
            addCriterion("delflag >", value, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("delflag >=", value, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagLessThan(Boolean value) {
            addCriterion("delflag <", value, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagLessThanOrEqualTo(Boolean value) {
            addCriterion("delflag <=", value, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagIn(List<Boolean> values) {
            addCriterion("delflag in", values, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagNotIn(List<Boolean> values) {
            addCriterion("delflag not in", values, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagBetween(Boolean value1, Boolean value2) {
            addCriterion("delflag between", value1, value2, "delflag");
            return (Criteria) this;
        }

        public Criteria andDelflagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("delflag not between", value1, value2, "delflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated do_not_delete_during_merge Sun Jul 16 14:11:16 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table r_doctor_anychat_t
     *
     * @mbg.generated Sun Jul 16 14:11:16 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}